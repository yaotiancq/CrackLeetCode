# Given a matrix consisted by 0 and 1, 0 stands for water, i stands for land.
# Calculate the largest area of longly island. The longly island is the island that every element of it can not be at the edge of matrix.

"""
First, change the island that touch the edge into water.
Second, run dfs again to update the max area of island.
"""
def largestAreaOfLonelyIsland(board) -> int:
    
    def dfs(i,j,t):
        
        for di,dj in [[0,1],[0,-1],[1,0],[-1,0]]:
            ni,nj=i+di,j+dj
            if 0<=ni<len(board) and 0<=nj<len(board[0]) and board[ni][nj]==1:
                t[0]+=1
                board[ni][nj]=0
                dfs(ni,nj,t)

    for i in range(len(board)):
        for j in range(len(board[0])):
            if (i==0 or i==len(board)-1) and (j==0 or j==len(board[0])-1) and board[i][j]==1:
                board[i][j]=0
                dfs(i,j,[1])
    
    ans=0
    for i in range(len(board)):
        for j in range(len(board[0])):
            if board[i][j]==1:
                board[i][j]=0
                t=[1]
                dfs(i,j,t)
                ans=max(ans,t[0])
    
    return ans
